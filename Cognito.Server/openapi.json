{
  "openapi": "3.0.1",
  "info": {
    "title": "Cognito API",
    "description": "This is description of Cognito REST API.",
    "version": "v1"
  },
  "paths": {
    "/api/AccruedTimes/{id}": {
      "get": {
        "tags": [
          "AccruedTimes"
        ],
        "summary": "Gets the specific AccruedTime by it's Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccruedTimeViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "put": {
        "tags": [
          "AccruedTimes"
        ],
        "summary": "Updates the specific AccruedTime.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccruedTimeBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccruedTimeBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccruedTimeBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccruedTimeBindingModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "AccruedTimes"
        ],
        "summary": "Deletes the specific AccruedTime.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/AccruedTimes": {
      "get": {
        "tags": [
          "AccruedTimes"
        ],
        "summary": "Gets all AccruedTimes.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccruedTimeViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "AccruedTimes"
        ],
        "summary": "Creates new AccruedTime.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccruedTimeBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccruedTimeBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccruedTimeBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccruedTimeBindingModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "taskId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "userId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "total": {
                      "type": "number",
                      "format": "double"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/AccruedTimes/page": {
      "get": {
        "tags": [
          "AccruedTimes"
        ],
        "summary": "Gets paged AccruedTimes.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccruedTimeViewModelPaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/AccruedTimes/filter": {
      "post": {
        "tags": [
          "AccruedTimes"
        ],
        "summary": "Not Implemented!",
        "responses": { }
      }
    },
    "/api/Auth/password-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserForPasswordResetEmailDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForPasswordResetEmailDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForPasswordResetEmailDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserForPasswordResetEmailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/password-reset": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordBindingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserForCreationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserForCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/Login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Gets user JWT access token and refresh token based on user name and password.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginBindingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokensViewModels"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensViewModels"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensViewModels"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Auth/Refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refreshes user's JWT access token and refresh token.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenBindingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokensViewModels"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensViewModels"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokensViewModels"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/Contacts/LinkContacts": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "ContactId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ActId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MatterId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DomainId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Contacts/GetContacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "Key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ActId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Contacts/Post": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "FirstName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FormalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Prtitle",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Prentity",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Praddress",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Prcity",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Prregion",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PrpostalCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Prcountry",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Prphone",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Premail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Notes",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "KeyName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DomainId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Added",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ContactType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Contacts/Put": {
      "put": {
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FirstName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "LastName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "FormalName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Prtitle",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Prentity",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Praddress",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Prcity",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Prregion",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PrpostalCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Prcountry",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Prphone",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Premail",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Notes",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "KeyName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "DomainId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Added",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "ContactType",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Contacts/{id}": {
      "delete": {
        "tags": [
          "Contacts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ContactsV2/{id}": {
      "get": {
        "tags": [
          "ContactsV2"
        ],
        "summary": "Gets the specific Contact by it's Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "put": {
        "tags": [
          "ContactsV2"
        ],
        "summary": "Updates the specific Contact.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactBindingModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "ContactsV2"
        ],
        "summary": "Deletes the specific Contact.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/ContactsV2": {
      "get": {
        "tags": [
          "ContactsV2"
        ],
        "summary": "Gets all Contacts.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "ContactsV2"
        ],
        "summary": "Creates new Contact.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactBindingModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "type": "string",
                      "nullable": true
                    },
                    "lastName": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "formalName": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "entity": {
                      "type": "string",
                      "nullable": true
                    },
                    "address": {
                      "type": "string",
                      "nullable": true
                    },
                    "city": {
                      "type": "string",
                      "nullable": true
                    },
                    "region": {
                      "type": "string",
                      "nullable": true
                    },
                    "postalCode": {
                      "type": "string",
                      "nullable": true
                    },
                    "country": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    },
                    "keyName": {
                      "type": "string",
                      "nullable": true
                    },
                    "contactType": {
                      "type": "string",
                      "nullable": true
                    },
                    "domainId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "dateAdded": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdByUser": {
                      "type": "string",
                      "nullable": true
                    },
                    "updatedByUser": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdByUserId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "updatedByUserId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/ContactsV2/page": {
      "get": {
        "tags": [
          "ContactsV2"
        ],
        "summary": "Gets paged Contacts.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactViewModelPaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/ContactsV2/filter": {
      "post": {
        "tags": [
          "ContactsV2"
        ],
        "summary": "Not Implemented!",
        "responses": { }
      }
    },
    "/api/Details/Split": {
      "put": {
        "tags": [
          "Details"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MergeSplitItemsBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeSplitItemsBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeSplitItemsBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MergeSplitItemsBindingModel"
              }
            }
          }
        },
        "responses": { }
      }
    },
    "/api/Details/Merge": {
      "put": {
        "tags": [
          "Details"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MergeSplitItemsBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeSplitItemsBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeSplitItemsBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MergeSplitItemsBindingModel"
              }
            }
          }
        },
        "responses": { }
      }
    },
    "/api/Details/Extraction": {
      "post": {
        "tags": [
          "Details"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DetailExtractionBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetailExtractionBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DetailExtractionBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DetailExtractionBindingModel"
              }
            }
          }
        },
        "responses": { }
      }
    },
    "/api/Details/{id}": {
      "get": {
        "tags": [
          "Details"
        ],
        "summary": "Gets the specific Detail by it's Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Details"
        ],
        "summary": "Updates the specific Detail.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DetailBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetailBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DetailBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DetailBindingModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Details"
        ],
        "summary": "Deletes the specific Detail.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Details": {
      "get": {
        "tags": [
          "Details"
        ],
        "summary": "Gets all Details.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DetailViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Details"
        ],
        "summary": "Creates new Detail.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DetailBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetailBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DetailBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DetailBindingModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "type": "string",
                      "nullable": true
                    },
                    "source": {
                      "type": "string",
                      "nullable": true
                    },
                    "added": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "statement": {
                      "type": "string",
                      "nullable": true
                    },
                    "beginPage": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "beginLine": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "endPage": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "endLine": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "chronoDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "chronoTime": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "displayOrder": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "itemTypeId": {
                      "$ref": "#/components/schemas/DetailTypeId"
                    },
                    "actId": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "matterId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Details/page": {
      "get": {
        "tags": [
          "Details"
        ],
        "summary": "Gets paged Details.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailViewModelPaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Details/filter": {
      "post": {
        "tags": [
          "Details"
        ],
        "summary": "Not Implemented!",
        "responses": { }
      }
    },
    "/api/Documents/ConvertStatus": {
      "get": {
        "tags": [
          "Documents"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Documents/DraftSaveAs": {
      "post": {
        "tags": [
          "Documents"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Base64",
                  "FileName",
                  "Format"
                ],
                "type": "object",
                "properties": {
                  "Base64": {
                    "type": "string"
                  },
                  "FileName": {
                    "type": "string"
                  },
                  "Format": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Reason": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "Base64": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                },
                "Format": {
                  "style": "form"
                },
                "Reason": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Documents/LinkDcuments": {
      "get": {
        "tags": [
          "Documents"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDocumentBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDocumentBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDocumentBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDocumentBindingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Documents": {
      "get": {
        "tags": [
          "Documents"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Documents"
        ],
        "parameters": [
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/DocumentStatusId"
            }
          },
          {
            "name": "TaskId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProjectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Documents/{id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "operationId": "GetDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "patch": {
        "tags": [
          "Documents"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentBindingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/DocumentV2": {
      "get": {
        "tags": [
          "DocumentV2"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "DocumentV2"
        ],
        "parameters": [
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/DocumentStatusId"
            }
          },
          {
            "name": "TaskId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ProjectId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/DocumentV2/{documentId}": {
      "get": {
        "tags": [
          "DocumentV2"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "DocumentV2"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDocumentBindingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "DocumentV2"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/DocumentV2/{documentId}/complete": {
      "put": {
        "tags": [
          "DocumentV2"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/DocumentV2/{documentId}/link": {
      "put": {
        "tags": [
          "DocumentV2"
        ],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkDocumentBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkDocumentBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkDocumentBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkDocumentBindingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Domains/{id}/team": {
      "get": {
        "tags": [
          "Domains"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": { }
      }
    },
    "/api/Domains/{id}": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "Gets the specific Domain by it's Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Domains"
        ],
        "summary": "Updates the specific Domain.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDomainBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDomainBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDomainBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDomainBindingModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Domains"
        ],
        "summary": "Deletes the specific Domain.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Domains": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "Gets all Domains.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Domains"
        ],
        "summary": "Creates new Domain.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDomainBindingModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "adminUserId": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "tenantId": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "domainLicenses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DomainLicenseViewModel"
                      },
                      "nullable": true
                    },
                    "userDomains": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserDomainViewModel"
                      },
                      "nullable": true
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Domains/page": {
      "get": {
        "tags": [
          "Domains"
        ],
        "summary": "Gets paged Domains.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainViewModelPaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Domains/filter": {
      "post": {
        "tags": [
          "Domains"
        ],
        "summary": "Not Implemented!",
        "responses": { }
      }
    },
    "/api/Licenses/{id}": {
      "get": {
        "tags": [
          "Licenses"
        ],
        "summary": "Gets the specific License by it's Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "number",
                      "format": "double"
                    },
                    "licenseTypeId": {
                      "$ref": "#/components/schemas/LicenseTypeId"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Licenses"
        ],
        "summary": "Updates the specific License.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseBindingModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Licenses"
        ],
        "summary": "Deletes the specific License.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Licenses": {
      "get": {
        "tags": [
          "Licenses"
        ],
        "summary": "Gets all Licenses.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LicenseViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Licenses"
        ],
        "summary": "Creates new License.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LicenseBindingModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "number",
                      "format": "double"
                    },
                    "licenseTypeId": {
                      "$ref": "#/components/schemas/LicenseTypeId"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Licenses/page": {
      "get": {
        "tags": [
          "Licenses"
        ],
        "summary": "Gets paged Licenses.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseViewModelPaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Licenses/filter": {
      "post": {
        "tags": [
          "Licenses"
        ],
        "summary": "Not Implemented!",
        "responses": { }
      }
    },
    "/api/Lookups": {
      "get": {
        "tags": [
          "Lookups"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Matters": {
      "get": {
        "tags": [
          "Matters"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Matters"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMatterBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMatterBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMatterBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMatterBindingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Matters/{id}": {
      "get": {
        "tags": [
          "Matters"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Matters"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Matters/{id}/team": {
      "get": {
        "tags": [
          "Matters"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Matters/{id}/owners": {
      "get": {
        "tags": [
          "Matters"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Messages/{id}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "operationId": "GetMessage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Messages": {
      "get": {
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MessageContainer",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageBindingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Messages/thread/{recipientId}": {
      "get": {
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "name": "recipientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Points/{id}": {
      "put": {
        "tags": [
          "Points"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PointForUpdateDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PointForUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PointForUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PointForUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Points"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Points/{id}/link": {
      "post": {
        "tags": [
          "Points"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Points/linkedPoints": {
      "get": {
        "tags": [
          "Points"
        ],
        "parameters": [
          {
            "name": "items",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Points/{id}/reorder": {
      "post": {
        "tags": [
          "Points"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePointToReorderBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePointToReorderBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePointToReorderBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePointToReorderBindingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Points": {
      "get": {
        "tags": [
          "Points"
        ],
        "parameters": [
          {
            "name": "matterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Points"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePointBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePointBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePointBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePointBindingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Projects/{id}/team": {
      "get": {
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": { }
      }
    },
    "/api/Projects/{id}/linked-details": {
      "get": {
        "tags": [
          "Projects"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": { }
      }
    },
    "/api/Projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets the specific Project by it's Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Updates the specific Project.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBindingModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Deletes the specific Project.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets all Projects.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Creates new Project.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectBindingModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fullName": {
                      "type": "string",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "projectNo": {
                      "type": "string",
                      "nullable": true
                    },
                    "clientNo": {
                      "type": "string",
                      "nullable": true
                    },
                    "projectTypeId": {
                      "$ref": "#/components/schemas/ProjectTypeId"
                    },
                    "isPrivate": {
                      "type": "boolean"
                    },
                    "archivedOn": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "isArchived": {
                      "type": "boolean"
                    },
                    "domainId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "dateAdded": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdByUser": {
                      "type": "string",
                      "nullable": true
                    },
                    "updatedByUser": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdByUserId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "updatedByUserId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Projects/page": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets paged Projects.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectViewModelPaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Projects/filter": {
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Not Implemented!",
        "responses": { }
      }
    },
    "/api/Tasks/project": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TaskStatusId"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": { }
      }
    },
    "/api/Tasks/{taskId}/details": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "detailTypeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": { }
      }
    },
    "/api/Tasks/{taskId}/websites": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": { }
      }
    },
    "/api/Tasks/Complete": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskIdBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskIdBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskIdBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskIdBindingModel"
              }
            }
          }
        },
        "responses": { }
      }
    },
    "/api/Tasks/Move": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTaskBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTaskBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTaskBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MoveTaskBindingModel"
              }
            }
          }
        },
        "responses": { }
      }
    },
    "/api/Tasks/Advance": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "responses": { }
      }
    },
    "/api/Tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Gets the specific ProjectTask by it's Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Updates the specific ProjectTask.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskBindingModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Deletes the specific ProjectTask.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Gets all ProjectTasks.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Creates new ProjectTask.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TaskBindingModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "actId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "matterId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "ownerId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "descr": {
                      "type": "string",
                      "nullable": true
                    },
                    "groupDate": {
                      "type": "string",
                      "nullable": true
                    },
                    "nextDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "nextTime": {
                      "type": "string",
                      "nullable": true
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "nextActor": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "nullable": true
                    },
                    "actTypeId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "accrued": {
                      "type": "string",
                      "nullable": true
                    },
                    "accruedTotal": {
                      "type": "number",
                      "format": "double"
                    },
                    "projectName": {
                      "type": "string",
                      "nullable": true
                    },
                    "projectTypeId": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "detailsCount": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "timeId": {
                      "type": "integer",
                      "format": "int32",
                      "nullable": true
                    },
                    "isEvent": {
                      "type": "boolean"
                    },
                    "dateAdded": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "dateUpdated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdByUser": {
                      "type": "string",
                      "nullable": true
                    },
                    "updatedByUser": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdByUserId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "updatedByUserId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Tasks/page": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Gets paged ProjectTasks.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskViewModelPaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Tasks/filter": {
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Not Implemented!",
        "responses": { }
      }
    },
    "/api/Tenants": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Gets all Tenants.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TenantViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "Creates new Tenant.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantBindingModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "companyName": {
                      "type": "string",
                      "nullable": true
                    },
                    "address": {
                      "$ref": "#/components/schemas/AddressViewModel"
                    },
                    "contactName": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "tenantName": {
                      "type": "string",
                      "nullable": true
                    },
                    "tenantAdminEmails": {
                      "type": "string",
                      "nullable": true
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Tenants/{id}": {
      "put": {
        "tags": [
          "Tenants"
        ],
        "summary": "Updates the specific Tenant.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TenantBindingModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Tenants"
        ],
        "summary": "Deletes the specific Tenant.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Gets the specific Tenant by it's Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "companyName": {
                      "type": "string",
                      "nullable": true
                    },
                    "address": {
                      "$ref": "#/components/schemas/AddressViewModel"
                    },
                    "contactName": {
                      "type": "string",
                      "nullable": true
                    },
                    "email": {
                      "type": "string",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "tenantName": {
                      "type": "string",
                      "nullable": true
                    },
                    "tenantAdminEmails": {
                      "type": "string",
                      "nullable": true
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Tenants/{tenantId}/domains": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "parameters": [
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": { }
      }
    },
    "/api/Tenants/page": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "summary": "Gets paged Tenants.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantViewModelPaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Tenants/filter": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "summary": "Not Implemented!",
        "responses": { }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserBindingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Websites/{id}": {
      "get": {
        "tags": [
          "Websites"
        ],
        "summary": "Gets the specific Website by it's Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteViewModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Websites"
        ],
        "summary": "Updates the specific Website.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteBindingModel"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Websites"
        ],
        "summary": "Deletes the specific Website.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Websites": {
      "get": {
        "tags": [
          "Websites"
        ],
        "summary": "Gets all Websites.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsiteViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Websites"
        ],
        "summary": "Creates new Website.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteBindingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteBindingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteBindingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteBindingModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "taskId": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    },
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Websites/page": {
      "get": {
        "tags": [
          "Websites"
        ],
        "summary": "Gets paged Websites.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortField",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteViewModelPaginatedList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "ServerError"
          }
        }
      }
    },
    "/api/Websites/filter": {
      "post": {
        "tags": [
          "Websites"
        ],
        "summary": "Not Implemented!",
        "responses": { }
      }
    }
  },
  "components": {
    "schemas": {
      "AccruedTimeViewModel": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AccruedTimeBindingModel": {
        "required": [
          "from",
          "taskId",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AccruedTimeViewModelPaginatedList": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccruedTimeViewModel"
            },
            "nullable": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "UserForPasswordResetEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ResetPasswordBindingModel": {
        "required": [
          "email",
          "password",
          "passwordConfirm",
          "token"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "passwordConfirm": {
            "type": "string",
            "format": "password"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "UserForCreationDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "domainName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "LoginBindingModel": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "TokensViewModels": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "RefreshTokenBindingModel": {
        "required": [
          "accessToken",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ContactViewModel": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "formalName": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "entity": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "keyName": {
            "type": "string",
            "nullable": true
          },
          "contactType": {
            "type": "string",
            "nullable": true
          },
          "domainId": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUser": {
            "type": "string",
            "nullable": true
          },
          "updatedByUser": {
            "type": "string",
            "nullable": true
          },
          "createdByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ContactBindingModel": {
        "required": [
          "domainId",
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 50,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "formalName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "title": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "entity": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "address": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 25,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 128,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "keyName": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "contactType": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "domainId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ContactViewModelPaginatedList": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactViewModel"
            },
            "nullable": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "MergeSplitItemsBindingModel": {
        "required": [
          "detailIds"
        ],
        "type": "object",
        "properties": {
          "detailIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "DetailExtractionBindingModel": {
        "type": "object",
        "properties": {
          "extracted": {
            "type": "string",
            "nullable": true
          },
          "actId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "matterId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "ownerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "domainId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "DetailTypeId": {
        "enum": [
          2,
          4,
          5,
          7,
          12,
          16,
          19,
          24,
          25,
          40,
          41
        ],
        "type": "integer",
        "format": "int32"
      },
      "DetailViewModel": {
        "type": "object",
        "properties": {
          "item": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "added": {
            "type": "string",
            "format": "date-time"
          },
          "statement": {
            "type": "string",
            "nullable": true
          },
          "beginPage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "beginLine": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endPage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endLine": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "chronoDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "chronoTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "itemTypeId": {
            "$ref": "#/components/schemas/DetailTypeId"
          },
          "actId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "matterId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DetailBindingModel": {
        "required": [
          "actId",
          "item",
          "itemTypeId"
        ],
        "type": "object",
        "properties": {
          "item": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "statement": {
            "type": "string",
            "nullable": true
          },
          "added": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "beginPage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "beginLine": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endPage": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "endLine": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "chrono": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "displayOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "itemTypeId": {
            "$ref": "#/components/schemas/DetailTypeId"
          },
          "actId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DetailViewModelPaginatedList": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DetailViewModel"
            },
            "nullable": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "CreateItemDocumentBindingModel": {
        "required": [
          "actId",
          "docId",
          "domainId",
          "fileName",
          "key",
          "matterId"
        ],
        "type": "object",
        "properties": {
          "docId": {
            "type": "integer",
            "format": "int32"
          },
          "actId": {
            "type": "integer",
            "format": "int32"
          },
          "fileName": {
            "type": "string"
          },
          "matterId": {
            "type": "integer",
            "format": "int32"
          },
          "domainId": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "DocumentStatusId": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "UpdateDocumentBindingModel": {
        "required": [
          "description",
          "fileName"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "LinkDocumentBindingModel": {
        "required": [
          "projectId"
        ],
        "type": "object",
        "properties": {
          "projectId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LicenseTypeId": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "LicenseViewModel": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "format": "double"
          },
          "licenseTypeId": {
            "$ref": "#/components/schemas/LicenseTypeId"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DomainLicenseViewModel": {
        "type": "object",
        "properties": {
          "licenseId": {
            "type": "integer",
            "format": "int32"
          },
          "domainId": {
            "type": "integer",
            "format": "int32"
          },
          "license": {
            "$ref": "#/components/schemas/LicenseViewModel"
          },
          "licenses": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserViewModel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserDomainViewModel": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserViewModel"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DomainViewModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "adminUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "tenantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "domainLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainLicenseViewModel"
            },
            "nullable": true
          },
          "userDomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDomainViewModel"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DomainLicenseBindingModel": {
        "required": [
          "discount",
          "licenseId",
          "licenses",
          "price"
        ],
        "type": "object",
        "properties": {
          "domainId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "licenseId": {
            "type": "integer",
            "format": "int32"
          },
          "discount": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "licenses": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateDomainBindingModel": {
        "required": [
          "domainLicenses",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "type": "string"
          },
          "domainLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainLicenseBindingModel"
            }
          }
        }
      },
      "CreateDomainBindingModel": {
        "required": [
          "adminEmail",
          "adminFirstName",
          "adminLastName",
          "domainLicenses",
          "name",
          "tenantId"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "type": "string"
          },
          "adminFirstName": {
            "maxLength": 50,
            "type": "string"
          },
          "adminLastName": {
            "maxLength": 50,
            "type": "string"
          },
          "adminEmail": {
            "maxLength": 128,
            "type": "string"
          },
          "tenantId": {
            "type": "integer",
            "format": "int32"
          },
          "domainLicenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainLicenseBindingModel"
            }
          }
        }
      },
      "DomainViewModelPaginatedList": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainViewModel"
            },
            "nullable": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "LicenseBindingModel": {
        "type": "object"
      },
      "LicenseViewModelPaginatedList": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LicenseViewModel"
            },
            "nullable": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "CreateMatterBindingModel": {
        "type": "object",
        "properties": {
          "flag": {
            "type": "boolean",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "matterNo": {
            "type": "string",
            "nullable": true
          },
          "clientNo": {
            "type": "string",
            "nullable": true
          },
          "ownerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "isPrivate": {
            "type": "boolean",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "archived": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean",
            "nullable": true
          },
          "domainId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CreateMessageBindingModel": {
        "required": [
          "content",
          "recipientId",
          "senderId"
        ],
        "type": "object",
        "properties": {
          "senderId": {
            "type": "integer",
            "format": "int32"
          },
          "recipientId": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "PointForUpdateDto": {
        "type": "object",
        "properties": {
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "matterId": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdatePointToReorderBindingModel": {
        "required": [
          "count"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "CreatePointBindingModel": {
        "required": [
          "matterId",
          "parentLabel",
          "text"
        ],
        "type": "object",
        "properties": {
          "matterId": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentLabel": {
            "type": "string"
          }
        }
      },
      "ProjectTypeId": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProjectViewModel": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "projectNo": {
            "type": "string",
            "nullable": true
          },
          "clientNo": {
            "type": "string",
            "nullable": true
          },
          "projectTypeId": {
            "$ref": "#/components/schemas/ProjectTypeId"
          },
          "isPrivate": {
            "type": "boolean"
          },
          "archivedOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          },
          "domainId": {
            "type": "integer",
            "format": "int32"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUser": {
            "type": "string",
            "nullable": true
          },
          "updatedByUser": {
            "type": "string",
            "nullable": true
          },
          "createdByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProjectBindingModel": {
        "type": "object"
      },
      "ProjectViewModelPaginatedList": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectViewModel"
            },
            "nullable": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "TaskStatusId": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "TaskIdBindingModel": {
        "required": [
          "taskId"
        ],
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MoveTaskBindingModel": {
        "required": [
          "nextDate",
          "taskId"
        ],
        "type": "object",
        "properties": {
          "nextDate": {
            "type": "string",
            "format": "date-time"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TaskViewModel": {
        "type": "object",
        "properties": {
          "actId": {
            "type": "integer",
            "format": "int32"
          },
          "matterId": {
            "type": "integer",
            "format": "int32"
          },
          "ownerId": {
            "type": "integer",
            "format": "int32"
          },
          "descr": {
            "type": "string",
            "nullable": true
          },
          "groupDate": {
            "type": "string",
            "nullable": true
          },
          "nextDate": {
            "type": "string",
            "format": "date-time"
          },
          "nextTime": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextActor": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "actTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "accrued": {
            "type": "string",
            "nullable": true
          },
          "accruedTotal": {
            "type": "number",
            "format": "double"
          },
          "projectName": {
            "type": "string",
            "nullable": true
          },
          "projectTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detailsCount": {
            "type": "integer",
            "format": "int32"
          },
          "timeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isEvent": {
            "type": "boolean"
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUser": {
            "type": "string",
            "nullable": true
          },
          "updatedByUser": {
            "type": "string",
            "nullable": true
          },
          "createdByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TaskBindingModel": {
        "required": [
          "actTypeId",
          "isEvent",
          "matterId",
          "nextDate",
          "ownerId",
          "status",
          "timeId"
        ],
        "type": "object",
        "properties": {
          "matterId": {
            "type": "integer",
            "format": "int32"
          },
          "ownerId": {
            "type": "integer",
            "format": "int32"
          },
          "actTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "nextDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "timeId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatusId"
          },
          "descr": {
            "type": "string",
            "nullable": true
          },
          "isEvent": {
            "type": "boolean"
          },
          "accrued": {
            "type": "string",
            "nullable": true
          },
          "nextActor": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        }
      },
      "TaskViewModelPaginatedList": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskViewModel"
            },
            "nullable": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "StateId": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51
        ],
        "type": "integer",
        "format": "int32"
      },
      "StateViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddressViewModel": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "stateId": {
            "$ref": "#/components/schemas/StateId"
          },
          "state": {
            "$ref": "#/components/schemas/StateViewModel"
          }
        }
      },
      "TenantViewModel": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/AddressViewModel"
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "tenantName": {
            "type": "string",
            "nullable": true
          },
          "tenantAdminEmails": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AddressBindingModel": {
        "required": [
          "city",
          "stateId",
          "street",
          "zip"
        ],
        "type": "object",
        "properties": {
          "street": {
            "maxLength": 250,
            "type": "string"
          },
          "city": {
            "maxLength": 100,
            "type": "string"
          },
          "zip": {
            "maxLength": 10,
            "type": "string"
          },
          "stateId": {
            "$ref": "#/components/schemas/StateId"
          }
        }
      },
      "TenantBindingModel": {
        "required": [
          "companyName",
          "contactName",
          "email",
          "phone"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "maxLength": 200,
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/AddressBindingModel"
          },
          "contactName": {
            "maxLength": 50,
            "type": "string"
          },
          "email": {
            "maxLength": 128,
            "type": "string",
            "format": "email"
          },
          "phone": {
            "maxLength": 25,
            "type": "string"
          },
          "tenantName": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          }
        }
      },
      "TenantViewModelPaginatedList": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TenantViewModel"
            },
            "nullable": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "CreateUserBindingModel": {
        "required": [
          "domainId",
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "domainId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WebsiteViewModel": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WebsiteBindingModel": {
        "required": [
          "taskId",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "url": {
            "maxLength": 255,
            "type": "string"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WebsiteViewModelPaginatedList": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebsiteViewModel"
            },
            "nullable": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
